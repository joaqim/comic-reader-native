// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ViewPager /> tests method tests tests _getCurrentScrollIndex 1`] = `
Array [
  Object {
    "input": 0,
    "output": 0,
  },
  Object {
    "input": 100,
    "output": 0.13,
  },
  Object {
    "input": 200,
    "output": 0.25,
  },
  Object {
    "input": 300,
    "output": 0.38,
  },
  Object {
    "input": 400,
    "output": 0.5,
  },
  Object {
    "input": 500,
    "output": 0.63,
  },
  Object {
    "input": 600,
    "output": 0.75,
  },
  Object {
    "input": 700,
    "output": 0.88,
  },
  Object {
    "input": 800,
    "output": 1,
  },
  Object {
    "input": 900,
    "output": 1.13,
  },
  Object {
    "input": 1000,
    "output": 1.25,
  },
  Object {
    "input": 1100,
    "output": 1.38,
  },
  Object {
    "input": 1200,
    "output": 1.5,
  },
  Object {
    "input": 1300,
    "output": 1.63,
  },
  Object {
    "input": 1400,
    "output": 1.75,
  },
  Object {
    "input": 1500,
    "output": 1.88,
  },
  Object {
    "input": 1600,
    "output": 2,
  },
  Object {
    "input": 1700,
    "output": 2.13,
  },
  Object {
    "input": 1800,
    "output": 2.25,
  },
  Object {
    "input": 1900,
    "output": 2.38,
  },
  Object {
    "input": 2000,
    "output": 2.5,
  },
  Object {
    "input": 2100,
    "output": 2.63,
  },
  Object {
    "input": 2200,
    "output": 2.75,
  },
  Object {
    "input": 2300,
    "output": 2.88,
  },
  Object {
    "input": 2400,
    "output": 3,
  },
  Object {
    "input": 2500,
    "output": 3.13,
  },
  Object {
    "input": 2600,
    "output": 3.25,
  },
  Object {
    "input": 2700,
    "output": 3.38,
  },
  Object {
    "input": 2800,
    "output": 3.5,
  },
  Object {
    "input": 2900,
    "output": 3.63,
  },
  Object {
    "input": 3000,
    "output": 3.75,
  },
  Object {
    "input": 3100,
    "output": 3.88,
  },
  Object {
    "input": 3200,
    "output": 4,
  },
  Object {
    "input": 3300,
    "output": 4.13,
  },
  Object {
    "input": 3400,
    "output": 4.25,
  },
  Object {
    "input": 3500,
    "output": 4.38,
  },
  Object {
    "input": 3600,
    "output": 4.5,
  },
  Object {
    "input": 3700,
    "output": 4.63,
  },
  Object {
    "input": 3800,
    "output": 4.75,
  },
  Object {
    "input": 3900,
    "output": 4.88,
  },
  Object {
    "input": 4000,
    "output": 5,
  },
]
`;

exports[`<ViewPager /> tests property tests tests a set pageWidth of 50 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={false}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={50}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 50,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests tests that experimentalMirroring={true} renders the outer views within a <Mirror /> component 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-0"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 3 | pageIndex: 0
            </Text>
          </View>
        </Mirror>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-1"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 4 | pageIndex: 1
            </Text>
          </View>
        </Mirror>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-2"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 1 | pageIndex: 2
            </Text>
          </View>
        </Mirror>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-0"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 4 | pageIndex: 5
            </Text>
          </View>
        </Mirror>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-1"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 1 | pageIndex: 6
            </Text>
          </View>
        </Mirror>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <Mirror
          connectionId="mirror-2"
          containerStyle={
            Object {
              "flexGrow": 1,
            }
          }
          experimentalComponentDetection={true}
          mirroredProps={
            Array [
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
                Object {
                  "width": 800,
                },
              ]
            }
          >
            <Text>
              mock page 2 | pageIndex: 7
            </Text>
          </View>
        </Mirror>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests tests that lazyrender is set properly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={true}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests tests that pagingEnabled is set properly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={false}
    scrollEnabled={true}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests tests that scrollEnabled is set properly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={false}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests tests that showNativeScrollIndicator is set properly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests property tests threshold tests tests threshold with 0 1`] = `
Object {
  "dataSource": Array [
    Object {
      "_pageIndex": 0,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_pageIndex": 1,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_pageIndex": 2,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_pageIndex": 3,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
  ],
}
`;

exports[`<ViewPager /> tests property tests threshold tests tests threshold with 3 1`] = `
Object {
  "dataSource": Array [
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 0,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 1,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 2,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_pageIndex": 3,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_pageIndex": 4,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_pageIndex": 5,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_pageIndex": 6,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 7,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 8,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 9,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
  ],
}
`;

exports[`<ViewPager /> tests property tests threshold tests tests threshold with 10 1`] = `
Object {
  "dataSource": Array [
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 0,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 1,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 2,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 3,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 4,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 5,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 6,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 7,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 8,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 9,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_pageIndex": 10,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_pageIndex": 11,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_pageIndex": 12,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_pageIndex": 13,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 14,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 15,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 16,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 17,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 18,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 19,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 20,
      "_pageNumber": 3,
      "title": "mock page 3",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 21,
      "_pageNumber": 4,
      "title": "mock page 4",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 22,
      "_pageNumber": 1,
      "title": "mock page 1",
    },
    Object {
      "_isThresholdPage": true,
      "_pageIndex": 23,
      "_pageNumber": 2,
      "title": "mock page 2",
    },
  ],
}
`;

exports[`<ViewPager /> tests snapshots the component with initial props 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 6400,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 0
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 1
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 2
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 3
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={3}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 3 | pageIndex: 4
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={false}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={4}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 4 | pageIndex: 5
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={1}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 1 | pageIndex: 6
          </Text>
        </View>
      </Page>
      <Page
        dev={false}
        isThresholdPage={true}
        lazyrender={false}
        lazyrenderThreshold={1}
        maxPageNumber={4}
        pageNumber={2}
        pageWidth={800}
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
              Object {
                "width": 800,
              },
            ]
          }
        >
          <Text>
            mock page 2 | pageIndex: 7
          </Text>
        </View>
      </Page>
    </View>
  </RCTScrollView>
</View>
`;

exports[`<ViewPager /> tests snapshots the component without props 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {},
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexDirection": "row",
          "overflow": "scroll",
        },
        Object {},
        Object {
          "width": 0,
        },
      ]
    }
    horizontal={true}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    pagingEnabled={true}
    scrollEnabled={false}
    scrollEventThrottle={1}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View />
  </RCTScrollView>
</View>
`;
